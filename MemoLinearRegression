# -*- coding=utf-8 -*-

import tensorflow as tf
import numpy as np

x_data = np.random.rand(100)
y_data = x_data * 0.1 + 0.2

k = tf.Variable(0.)
b = tf.Variable(0.)
y = x_data * k + b

loss = 0.5 * tf.reduce_mean(tf.square(y - y_data))

train = tf.train.GradientDescentOptimizer(0.2).minimize(loss)

with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())
    for step in range(201):
        sess.run(train)
        if step % 20 == 0:
            print(step, sess.run([k, b]))


Output:
0 [0.027674062, 0.05031806]
20 [0.10588736, 0.19624746]
40 [0.10466099, 0.19742219]
60 [0.103563294, 0.19803028]
80 [0.10272381, 0.19849433]
100 [0.10208208, 0.19884907]
120 [0.10159154, 0.19912022]
140 [0.10121657, 0.1993275]
160 [0.100929946, 0.19948594]
180 [0.10071087, 0.19960704]
200 [0.100543395, 0.19969963]
